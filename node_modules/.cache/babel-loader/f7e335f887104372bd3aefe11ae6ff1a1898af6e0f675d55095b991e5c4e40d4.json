{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nvar react_1 = require(\"react\");\nfunction useCurrentEffect(callback, deps) {\n  react_1.useEffect(function () {\n    var isCurrent = true;\n    var currentCheck = function () {\n      return isCurrent;\n    };\n    var cleanup = callback(currentCheck);\n    return function () {\n      isCurrent = false;\n      cleanup && cleanup();\n    };\n  }, deps);\n}\nexports.useCurrentEffect = useCurrentEffect;","map":{"version":3,"names":["react_1","require","useCurrentEffect","callback","deps","useEffect","isCurrent","currentCheck","cleanup","exports"],"sources":["/home/weez/design-kit/node_modules/color-thief-react/node_modules/use-current-effect/src/useCurrentEffect.ts"],"sourcesContent":["import { useEffect, DependencyList } from \"react\";\r\ntype CheckCurrent = () => boolean;\r\n\r\n/**\r\n * Create useEffect with a parameter to track the life of the effect\r\n *\r\n * @param callback The effect to run, it will be passed a\r\n * function that can be called to track if the effect was cleaned up\r\n * @param deps The dependencies of the effect. When they change,\r\n * the result of the current check function will be false\r\n */\r\nexport function useCurrentEffect(\r\n  callback: ((isCurrent: CheckCurrent) => void) | ((isCurrent: CheckCurrent) => () => void),\r\n  deps?: DependencyList\r\n) {\r\n  useEffect(() => {\r\n    let isCurrent = true;\r\n    const currentCheck = () => isCurrent;\r\n    const cleanup = callback(currentCheck);\r\n    return () => {\r\n      // We set the current flag to false in the cleanup\r\n      isCurrent = false;\r\n      cleanup && cleanup();\r\n    };\r\n  }, deps); // eslint-disable-line react-hooks/exhaustive-deps\r\n}\r\n"],"mappings":";;;AAAA,IAAAA,OAAA,GAAAC,OAAA;AAWA,SAAgBC,gBAAgBA,CAC9BC,QAAyF,EACzFC,IAAqB;EAErBJ,OAAA,CAAAK,SAAS,CAAC;IACR,IAAIC,SAAS,GAAG,IAAI;IACpB,IAAMC,YAAY,GAAG,SAAAA,CAAA;MAAM,OAAAD,SAAS;IAAT,CAAS;IACpC,IAAME,OAAO,GAAGL,QAAQ,CAACI,YAAY,CAAC;IACtC,OAAO;MAELD,SAAS,GAAG,KAAK;MACjBE,OAAO,IAAIA,OAAO,EAAE;IACtB,CAAC;EACH,CAAC,EAAEJ,IAAI,CAAC;AACV;AAdAK,OAAA,CAAAP,gBAAA,GAAAA,gBAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}